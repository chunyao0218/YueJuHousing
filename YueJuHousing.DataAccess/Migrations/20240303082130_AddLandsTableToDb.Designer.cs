// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YueJuHousing.DataAccess.Data;

#nullable disable

namespace YueJuHousing.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240303082130_AddLandsTableToDb")]
    partial class AddLandsTableToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("YueJuHousing.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayOrder = 1,
                            Name = "預售屋"
                        },
                        new
                        {
                            Id = 2,
                            DisplayOrder = 2,
                            Name = "新成屋"
                        },
                        new
                        {
                            Id = 3,
                            DisplayOrder = 3,
                            Name = "中古屋"
                        },
                        new
                        {
                            Id = 4,
                            DisplayOrder = 4,
                            Name = "土地"
                        });
                });

            modelBuilder.Entity("YueJuHousing.Models.House", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AreaCodePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Balcony")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BathRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BedRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CarSquareMeters")
                        .HasColumnType("float");

                    b.Property<string>("CarSquareMetersUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CarSquarePrice")
                        .HasColumnType("float");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("CellPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CloseConvenienceStore")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseDepartmentStore")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseHospital")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseNightMarket")
                        .HasColumnType("bit");

                    b.Property<bool>("ClosePark")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseSchool")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseSuperMarket")
                        .HasColumnType("bit");

                    b.Property<bool>("CloseTraditionalMarket")
                        .HasColumnType("bit");

                    b.Property<string>("CommunityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPeopleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPeopleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ControlDamper")
                        .HasColumnType("bit");

                    b.Property<string>("DecorationLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EachSquarePrice")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FamousSchoolArea")
                        .HasColumnType("bit");

                    b.Property<string>("FeatureDescribe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Floor")
                        .HasColumnType("float");

                    b.Property<double>("HouseAge")
                        .HasColumnType("float");

                    b.Property<string>("HouseOrientation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncludeCarSquareMeters")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IncludeCarSquarePrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LandSquareMeters")
                        .HasColumnType("float");

                    b.Property<string>("LandSquareMetersType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LivingRoom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MainBuildingSquareMeters")
                        .HasColumnType("float");

                    b.Property<double>("ManageCost")
                        .HasColumnType("float");

                    b.Property<string>("ManageCostType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NoIntermediaryDisturb")
                        .HasColumnType("bit");

                    b.Property<double>("OutBuildingSquareMeters")
                        .HasColumnType("float");

                    b.Property<string>("PatternImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PercentageSelfFunding")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ProtectPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReplanArea")
                        .HasColumnType("bit");

                    b.Property<double>("SelfFunding")
                        .HasColumnType("float");

                    b.Property<double>("SharedBuildingSquareMeters")
                        .HasColumnType("float");

                    b.Property<double>("SquareMeters")
                        .HasColumnType("float");

                    b.Property<string>("SquareMetersUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationOrRoad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StationOrRoadType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WithRentContract")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Houses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdTitle = "市場最低價",
                            Address = "新北市中和區",
                            AreaCodePhoneNumber = "02",
                            Balcony = "1",
                            BathRoom = "2",
                            BedRoom = "3",
                            CarSquareMeters = 7.0,
                            CarSquareMetersUnit = "坪",
                            CarSquarePrice = 180.0,
                            CategoryId = 1,
                            CellPhoneNumber = "0988888888",
                            CloseConvenienceStore = true,
                            CloseDepartmentStore = false,
                            CloseHospital = false,
                            CloseNightMarket = false,
                            ClosePark = true,
                            CloseSchool = true,
                            CloseSuperMarket = false,
                            CloseTraditionalMarket = false,
                            CommunityName = "景安文匯",
                            ContactPeopleName = "陳小明",
                            ContactPeopleType = "屋主",
                            ControlDamper = true,
                            DecorationLevel = "簡易裝潢",
                            EachSquarePrice = 100.0,
                            Email = "kevin87332000@gmail.com",
                            FamousSchoolArea = true,
                            FeatureDescribe = "",
                            Floor = 3.0,
                            HouseAge = 5.0,
                            HouseOrientation = "坐北朝南",
                            ImageUrl = "",
                            IncludeCarSquareMeters = "含車位面積",
                            IncludeCarSquarePrice = "含車位售價",
                            LandSquareMeters = 20.0,
                            LandSquareMetersType = "土地坪數",
                            LineID = "h12s12bs",
                            LivingRoom = "2",
                            MainBuildingSquareMeters = 20.0,
                            ManageCost = 2000.0,
                            ManageCostType = "月繳",
                            NoIntermediaryDisturb = true,
                            OutBuildingSquareMeters = 20.0,
                            PatternImageUrl = "",
                            PercentageSelfFunding = 20.0,
                            PhoneNumber = "27315698",
                            Price = 15000000.0,
                            ProtectPhone = "啟用",
                            ReplanArea = true,
                            SelfFunding = 300.0,
                            SharedBuildingSquareMeters = 20.0,
                            SquareMeters = 20.0,
                            SquareMetersUnit = "坪",
                            StationOrRoad = "林口站",
                            StationOrRoadType = "公車站",
                            VideoUrl = "",
                            WithRentContract = "否"
                        },
                        new
                        {
                            Id = 2,
                            AdTitle = "市場最低價",
                            Address = "台北市大安區",
                            AreaCodePhoneNumber = "02",
                            Balcony = "1",
                            BathRoom = "2",
                            BedRoom = "2",
                            CarSquareMeters = 7.0,
                            CarSquareMetersUnit = "坪",
                            CarSquarePrice = 180.0,
                            CategoryId = 2,
                            CellPhoneNumber = "0988888888",
                            CloseConvenienceStore = true,
                            CloseDepartmentStore = false,
                            CloseHospital = false,
                            CloseNightMarket = false,
                            ClosePark = true,
                            CloseSchool = true,
                            CloseSuperMarket = false,
                            CloseTraditionalMarket = false,
                            CommunityName = "大安得逸",
                            ContactPeopleName = "陳小明",
                            ContactPeopleType = "屋主",
                            ControlDamper = true,
                            DecorationLevel = "簡易裝潢",
                            EachSquarePrice = 100.0,
                            Email = "kevin87332000@gmail.com",
                            FamousSchoolArea = true,
                            FeatureDescribe = "",
                            Floor = 5.0,
                            HouseAge = 6.0,
                            HouseOrientation = "坐南朝北",
                            ImageUrl = "",
                            IncludeCarSquareMeters = "含車位面積",
                            IncludeCarSquarePrice = "含車位售價",
                            LandSquareMeters = 20.0,
                            LandSquareMetersType = "土地坪數",
                            LineID = "h12s12bs",
                            LivingRoom = "2",
                            MainBuildingSquareMeters = 20.0,
                            ManageCost = 2000.0,
                            ManageCostType = "月繳",
                            NoIntermediaryDisturb = true,
                            OutBuildingSquareMeters = 20.0,
                            PatternImageUrl = "",
                            PercentageSelfFunding = 20.0,
                            PhoneNumber = "27315698",
                            Price = 30000000.0,
                            ProtectPhone = "啟用",
                            ReplanArea = true,
                            SelfFunding = 600.0,
                            SharedBuildingSquareMeters = 20.0,
                            SquareMeters = 30.0,
                            SquareMetersUnit = "坪",
                            StationOrRoad = "林口站",
                            StationOrRoadType = "公車站",
                            VideoUrl = "",
                            WithRentContract = "否"
                        },
                        new
                        {
                            Id = 3,
                            AdTitle = "市場最低價",
                            Address = "台中市西屯區",
                            AreaCodePhoneNumber = "02",
                            Balcony = "2",
                            BathRoom = "3",
                            BedRoom = "4",
                            CarSquareMeters = 7.0,
                            CarSquareMetersUnit = "坪",
                            CarSquarePrice = 180.0,
                            CategoryId = 3,
                            CellPhoneNumber = "0988888888",
                            CloseConvenienceStore = true,
                            CloseDepartmentStore = false,
                            CloseHospital = false,
                            CloseNightMarket = false,
                            ClosePark = true,
                            CloseSchool = true,
                            CloseSuperMarket = false,
                            CloseTraditionalMarket = false,
                            CommunityName = "中港層峰",
                            ContactPeopleName = "陳小明",
                            ContactPeopleType = "屋主",
                            ControlDamper = true,
                            DecorationLevel = "簡易裝潢",
                            EachSquarePrice = 100.0,
                            Email = "kevin87332000@gmail.com",
                            FamousSchoolArea = true,
                            FeatureDescribe = "",
                            Floor = 7.0,
                            HouseAge = 7.0,
                            HouseOrientation = "坐東朝西",
                            ImageUrl = "",
                            IncludeCarSquareMeters = "含車位面積",
                            IncludeCarSquarePrice = "含車位售價",
                            LandSquareMeters = 20.0,
                            LandSquareMetersType = "土地坪數",
                            LineID = "h12s12bs",
                            LivingRoom = "2",
                            MainBuildingSquareMeters = 20.0,
                            ManageCost = 2000.0,
                            ManageCostType = "月繳",
                            NoIntermediaryDisturb = true,
                            OutBuildingSquareMeters = 20.0,
                            PatternImageUrl = "",
                            PercentageSelfFunding = 20.0,
                            PhoneNumber = "27315698",
                            Price = 20000000.0,
                            ProtectPhone = "啟用",
                            ReplanArea = true,
                            SelfFunding = 400.0,
                            SharedBuildingSquareMeters = 20.0,
                            SquareMeters = 40.0,
                            SquareMetersUnit = "坪",
                            StationOrRoad = "林口站",
                            StationOrRoadType = "公車站",
                            VideoUrl = "",
                            WithRentContract = "否"
                        });
                });

            modelBuilder.Entity("YueJuHousing.Models.Land", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Advertise")
                        .HasColumnType("bit");

                    b.Property<string>("AreaCodePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("BuildingBulkRate")
                        .HasColumnType("float");

                    b.Property<double>("BuildingCoverageRate")
                        .HasColumnType("float");

                    b.Property<string>("CellPhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CloseRoad")
                        .HasColumnType("float");

                    b.Property<string>("ContactPeopleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPeopleType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EachSquarePrice")
                        .HasColumnType("float");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Factory")
                        .HasColumnType("bit");

                    b.Property<bool>("Farming")
                        .HasColumnType("bit");

                    b.Property<string>("FeatureDescribe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HaveElectricity")
                        .HasColumnType("bit");

                    b.Property<bool>("HaveWater")
                        .HasColumnType("bit");

                    b.Property<bool>("HighTechIndustry")
                        .HasColumnType("bit");

                    b.Property<bool>("Housing")
                        .HasColumnType("bit");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LandDepth")
                        .HasColumnType("float");

                    b.Property<string>("LandSerialNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandUseZone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandUseZoneType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LandUseZoneTypeDetail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LandWidth")
                        .HasColumnType("float");

                    b.Property<string>("LineID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("MaximumHeightRestriction")
                        .HasColumnType("float");

                    b.Property<bool>("NoIntermediaryDisturb")
                        .HasColumnType("bit");

                    b.Property<bool>("OpenStore")
                        .HasColumnType("bit");

                    b.Property<string>("OwnerShipType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PathWay")
                        .HasColumnType("bit");

                    b.Property<double>("PercentageSelfFunding")
                        .HasColumnType("float");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<bool>("ProcessingPlant")
                        .HasColumnType("bit");

                    b.Property<string>("ProtectPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ROI")
                        .HasColumnType("float");

                    b.Property<bool>("SMEnterprise")
                        .HasColumnType("bit");

                    b.Property<string>("SaleBySplit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("SelfFunding")
                        .HasColumnType("float");

                    b.Property<bool>("SmoothGround")
                        .HasColumnType("bit");

                    b.Property<double>("SquareMeters")
                        .HasColumnType("float");

                    b.Property<string>("SquareMetersUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("StoreHouse")
                        .HasColumnType("bit");

                    b.Property<string>("VideoUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdTitle = "市場最低價",
                            Address = "新北市中和區",
                            Advertise = false,
                            AreaCodePhoneNumber = "02",
                            BuildingBulkRate = 20.0,
                            BuildingCoverageRate = 20.0,
                            CellPhoneNumber = "0988888888",
                            CloseRoad = 15.0,
                            ContactPeopleName = "陳小明",
                            ContactPeopleType = "屋主",
                            EachSquarePrice = 100.0,
                            Email = "kevin87332000@gmail.com",
                            Factory = false,
                            Farming = false,
                            FeatureDescribe = "",
                            HaveElectricity = true,
                            HaveWater = true,
                            HighTechIndustry = false,
                            Housing = true,
                            ImageUrl = "",
                            LandDepth = 15.0,
                            LandSerialNumber = "板橋區篤行段0063-0000",
                            LandStatus = "自用中",
                            LandType = "住宅用地",
                            LandUseZone = "都市土地",
                            LandUseZoneType = "住宅區",
                            LandUseZoneTypeDetail = "住1",
                            LandWidth = 15.0,
                            LineID = "h12s12bs",
                            MaximumHeightRestriction = 30.0,
                            NoIntermediaryDisturb = true,
                            OpenStore = false,
                            OwnerShipType = "民有土地",
                            PathWay = true,
                            PercentageSelfFunding = 20.0,
                            PhoneNumber = "27315698",
                            Price = 15000000.0,
                            ProcessingPlant = false,
                            ProtectPhone = "啟用",
                            ROI = 10.0,
                            SMEnterprise = false,
                            SaleBySplit = "視情況而定",
                            SelfFunding = 300.0,
                            SmoothGround = true,
                            SquareMeters = 20.0,
                            SquareMetersUnit = "坪",
                            StoreHouse = false,
                            VideoUrl = ""
                        },
                        new
                        {
                            Id = 2,
                            AdTitle = "市場最低價",
                            Address = "台北市大安區",
                            Advertise = false,
                            AreaCodePhoneNumber = "02",
                            BuildingBulkRate = 20.0,
                            BuildingCoverageRate = 20.0,
                            CellPhoneNumber = "0988888888",
                            CloseRoad = 15.0,
                            ContactPeopleName = "陳小明",
                            ContactPeopleType = "屋主",
                            EachSquarePrice = 100.0,
                            Email = "kevin87332000@gmail.com",
                            Factory = false,
                            Farming = false,
                            FeatureDescribe = "",
                            HaveElectricity = true,
                            HaveWater = true,
                            HighTechIndustry = false,
                            Housing = true,
                            ImageUrl = "",
                            LandDepth = 15.0,
                            LandSerialNumber = "板橋區篤行段0063-0000",
                            LandStatus = "自用中",
                            LandType = "住宅用地",
                            LandUseZone = "都市土地",
                            LandUseZoneType = "住宅區",
                            LandUseZoneTypeDetail = "住1",
                            LandWidth = 15.0,
                            LineID = "h12s12bs",
                            MaximumHeightRestriction = 30.0,
                            NoIntermediaryDisturb = true,
                            OpenStore = false,
                            OwnerShipType = "民有土地",
                            PathWay = true,
                            PercentageSelfFunding = 30.0,
                            PhoneNumber = "27315698",
                            Price = 30000000.0,
                            ProcessingPlant = false,
                            ProtectPhone = "啟用",
                            ROI = 10.0,
                            SMEnterprise = false,
                            SaleBySplit = "視情況而定",
                            SelfFunding = 600.0,
                            SmoothGround = true,
                            SquareMeters = 30.0,
                            SquareMetersUnit = "坪",
                            StoreHouse = false,
                            VideoUrl = ""
                        },
                        new
                        {
                            Id = 3,
                            AdTitle = "市場最低價",
                            Address = "台中市西屯區",
                            Advertise = false,
                            AreaCodePhoneNumber = "02",
                            BuildingBulkRate = 20.0,
                            BuildingCoverageRate = 20.0,
                            CellPhoneNumber = "0988888888",
                            CloseRoad = 15.0,
                            ContactPeopleName = "陳小明",
                            ContactPeopleType = "屋主",
                            EachSquarePrice = 100.0,
                            Email = "kevin87332000@gmail.com",
                            Factory = false,
                            Farming = false,
                            FeatureDescribe = "",
                            HaveElectricity = true,
                            HaveWater = true,
                            HighTechIndustry = false,
                            Housing = true,
                            ImageUrl = "",
                            LandDepth = 15.0,
                            LandSerialNumber = "板橋區篤行段0063-0000",
                            LandStatus = "自用中",
                            LandType = "住宅用地",
                            LandUseZone = "都市土地",
                            LandUseZoneType = "住宅區",
                            LandUseZoneTypeDetail = "住1",
                            LandWidth = 15.0,
                            LineID = "h12s12bs",
                            MaximumHeightRestriction = 30.0,
                            NoIntermediaryDisturb = true,
                            OpenStore = false,
                            OwnerShipType = "民有土地",
                            PathWay = true,
                            PercentageSelfFunding = 40.0,
                            PhoneNumber = "27315698",
                            Price = 20000000.0,
                            ProcessingPlant = false,
                            ProtectPhone = "啟用",
                            ROI = 10.0,
                            SMEnterprise = false,
                            SaleBySplit = "視情況而定",
                            SelfFunding = 400.0,
                            SmoothGround = true,
                            SquareMeters = 40.0,
                            SquareMetersUnit = "坪",
                            StoreHouse = false,
                            VideoUrl = ""
                        });
                });

            modelBuilder.Entity("YueJuHousing.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("YueJuHousing.Models.House", b =>
                {
                    b.HasOne("YueJuHousing.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
